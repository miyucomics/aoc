Usually for these kinds of problems, I like just storing the bricks as lists or tuples of six numbers since I prefer to write code that works and is very straightforward. However today, that proved a tedious so I resorted to creating a dataclass called Brick that stored all the information of a brick and has a nice utility function for checking if a brick overlaps another. In a surprising act of kindness, AoC made the first x value smaller than the second, the first y smaller than the second, and the first z smaller than the second for each brick, so I could just use the spread operator to turn the input into a list of bricks.
